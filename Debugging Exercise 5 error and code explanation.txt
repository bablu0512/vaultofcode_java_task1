Exercise 5:

import java.util.*;
public class PrimeNumbers {
public static List<Integer> findPrimes(int n) {
List<Integer> primes = new ArrayList<>();
for (int i = 2; i <= n; i++) {
boolean isPrime = true;
for (int j = 2; j < i; j++) {
if (i % j == 0) {
isPrime = false;
break;
}
}
if (isPrime) {
primes.add(i);
}
}
return primes;
}
public static void main(String[] args) {
int n = 20;
List<Integer> primeNumbers = findPrimes(n);
System.out.println("Prime numbers up to " + n + ": " + primeNumbers);
}
}


The code aims to find prime numbers up to a given limit. However, there is a bug in the
code. When the student runs this code, it will raise an error or produce incorrect output. The
student's task is to identify and correct the bug.

ERROR EXPLANATION AND CORRECTED CODE:by debugging and running the above code we got the output as
Prime numbers up to 20: [2, 3, 5, 7, 11, 13, 17, 19]

CORRECTED CODE:

import java.util.*;
public class PrimeNumbers {
    public static List<Integer> findPrimes(int n) {
        List<Integer> primes = new ArrayList<>();
        for (int i = 2; i <= n; i++) { // if number modulo divided by 2 it is a prime number so the condition is correct
            boolean isPrime = true;
            for (int j = 2; j < i; j++) {
                if (i % j == 0) {
                    isPrime = false;
                    break;
                }
            }
            if (isPrime) {
                primes.add(i);
            }
        }
        return primes;
    }
    public static void main(String[] args) {
        int n = 20;
        List<Integer> primeNumbers = findPrimes(n);
        System.out.println("Prime numbers up to " + n + ": " + primeNumbers);
    }
}


in the above code if the the given digits are equals to zero by performing modulo division then it is a prime number condition

for (int i = 2; i <= n; i++) { // if number modulo divided by 2 it is a prime number so the condition is correct
            boolean isPrime = true;
            for (int j = 2; j < i; j++) {
                if (i % j == 0) {
                    isPrime = false;
                    break;
this is the main condition for the code
